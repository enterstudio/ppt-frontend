#parse("default/conf.vm")
#set($showVisualTab = true)
#parse("default/head.vm")
<script type="text/javascript" src="/PoolParty/javascript/visualmapper/d3.min.js"></script>
<script type="text/javascript" src="/PoolParty/javascript/visualmapper/visual_mapper.js"></script>
<link rel="stylesheet" type="text/css" href="/PoolParty/styles/visualmapper/visual_mapper.css">
<style>
.rootConceptText:hover{
    cursor: pointer;
}
</style>
<script type="text/javascript">
PPP.SkosTree={};
PPP.SkosTree.getConceptBranch = function(resourceUri) {
  if(resourceUri) {
    document.location.href=resourceUri+".html";
  }
}

$(document).ready(function(){

    var settings = {
      width : 700,																// Width of the Visual Mapper
      height: 800,																// Height of the Visual Mapper
      chartTypes : ["spider"],										// selectable chart types [Spider chart | Treemap]
      spiderChart: {															// Spider chart configurations
        rootInnerRadius         : 75,							// 	The inner radius of the root circle in "px"
        rootOuterRadius         : 320,						//	The outer radius of the root circle in "px"
        rootFontSize            : 15,							//	Font size of the root circle text in "px"
        rootCharactersPerLine   : 18,							//	The maximum characters per line in the text of the root circle
        conceptMaxRadius        : 25,							//	The maximum radius of the concept circles in "px"
        conceptMinRadius        : 15,							//	The minimum radius of the concept circles in "px"
        conceptFontSize         : 12,							//  The font size of the concept circles text in "px"
        conceptCharactersPerLine: 14,							// 	The maximum characters per line in the text of the concept circles
        sectorMinArc            : 0.5,						//	The minimum radius of the sectors in RAD
        paginationAngle         : 0.5,						//	The preferred radius of one page of the pagination area in RAD
        rectHeight              : 70,							//	The height of the space required for all elements of one concept circle in "px"
        rectWidth               : 70,							//  The width of the space required for all elements of one concept circle in "px"
        legendSize              : 12,							//	The font-size and space between every line of the legend in "px"
      },
      backColor      : "#FFFFFF",									// Background color of the Visual Mapper
      backColorItems : "#FFFFFF",									// Background color of items inside the Visual Mapper
      headerColor    : "#0094cc",									// Header color of the Visual Mapper
      inactiveColor  : "#dadada",									// Inactive color (The color used for inactive elements like inactive pagination and smaller objects like the inner circle of the spider chart)
      brightColors: {															// Bright color definition for each relation type:
        parent       : "#99ebc4",									//	Color for broader relations
        children     : "#ffe3ae",									// 	Color for narrower relations
        related      : "#ffb2ab",									//	Color for related relations
        conceptScheme: "#99d4eb"									//	Color for concept schemes
      },
      darkColors: {																// Dark color definition for each relation type:
        parent       : "#00cc6b",									//	Color for broader relations
        children     : "#ffb11a",									//  Color for narrower relations
        related      : "#d9210b",									//  Color for related relations
        conceptScheme: "#0094cc"									//  Color for concept schemes
      },
      wording: {																	// Wording for the legend
        glossaryRoot       : "${projectName}",
        legendConceptScheme: "Concept Scheme",
        legendParent       : "Broader",
        legendChildren     : "Narrower",
        legendRelated      : "Related",
        homeButton         : "Home "
      }
    };

    var jumpToConcept = function(oArgs){
        var uri = oArgs.id;
        window.setTimeout(function(){
            var node = document.getElementsByClassName("rootConceptText")[0];
            if(typeof node !== "undefined"){
                node.onclick = function(){
                    window.location.href = uri;
                };
            }
        }, 1000);
    };

    // Event listeners.
    var listeners = {
      "conceptLoaded" : [jumpToConcept]
    };

    // Initialise the Visual Mapper
    var visualMapper = jQuery("#VisualizationTab").initSmartSkosBrowser(settings, listeners);

    // Load data from endpoint into the chart
    visualMapper.load("/PoolParty/!/ldf/visualmapper/${repositoryId}/node", "", "${defaultLanguage}");

});
</script>
<h1>$projectName</h1>
<div id="VisualizationTab"></div>
#parse("default/foot.vm")
</div>
</div>